"use client"

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { ArrowLeft, Download, ExternalLink, Send, Copy, Check } from "lucide-react"
import Link from "next/link"
import { useState } from "react"

export default function TestingGuidePage() {
  const [method, setMethod] = useState("GET")
  const [endpoint, setEndpoint] = useState("/api/books")
  const [headers, setHeaders] = useState('{\n  "Content-Type": "application/json"\n}')
  const [body, setBody] = useState("")
  const [response, setResponse] = useState("")
  const [loading, setLoading] = useState(false)
  const [copied, setCopied] = useState(false)

  const handleTest = async () => {
    setLoading(true)
    setResponse("")

    try {
      const parsedHeaders = headers ? JSON.parse(headers) : {}
      const config: RequestInit = {
        method,
        headers: parsedHeaders,
      }

      if (method !== "GET" && method !== "DELETE" && body) {
        config.body = body
      }

      const res = await fetch(endpoint, config)
      const responseData = await res.json()

      const responseInfo = {
        status: res.status,
        statusText: res.statusText,
        headers: Object.fromEntries(res.headers.entries()),
        data: responseData,
      }

      setResponse(JSON.stringify(responseInfo, null, 2))
    } catch (error) {
      setResponse(JSON.stringify({ error: error instanceof Error ? error.message : "Unknown error" }, null, 2))
    } finally {
      setLoading(false)
    }
  }

  const copyResponse = () => {
    navigator.clipboard.writeText(response)
    setCopied(true)
    setTimeout(() => setCopied(false), 2000)
  }

  const examples = [
    {
      name: "–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏",
      method: "GET",
      endpoint: "/api/books",
      headers: "{}",
      body: "",
    },
    {
      name: "–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É",
      method: "POST",
      endpoint: "/api/books",
      headers: '{\n  "Content-Type": "application/json"\n}',
      body: '{\n  "title": "1984",\n  "author": "–î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª",\n  "year": 1949,\n  "genre": "–ê–Ω—Ç–∏—É—Ç–æ–ø–∏—è",\n  "pages": 328,\n  "rating": 5,\n  "status": "unread",\n  "notes": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∞–Ω—Ç–∏—É—Ç–æ–ø–∏—è –æ —Ç–æ—Ç–∞–ª–∏—Ç–∞—Ä–Ω–æ–º –æ–±—â–µ—Å—Ç–≤–µ"\n}',
    },
    {
      name: "–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–Ω–∏–≥–∏",
      method: "PUT",
      endpoint: "/api/books/1",
      headers: '{\n  "Content-Type": "application/json"\n}',
      body: '{\n  "status": "read",\n  "rating": 5\n}',
    },
    {
      name: "–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
      method: "GET",
      endpoint: "/api/books/stats",
      headers: "{}",
      body: "",
    },
  ]

  const loadExample = (example: (typeof examples)[0]) => {
    setMethod(example.method)
    setEndpoint(example.endpoint)
    setHeaders(example.headers)
    setBody(example.body)
    setResponse("")
  }

  const postmanCollection = {
    info: {
      name: "Book Library API Service",
      description: "–ö–æ–ª–ª–µ–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∫–Ω–∏–≥",
      schema: "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    },
    item: [
      {
        name: "Get All Books",
        request: {
          method: "GET",
          header: [],
          url: {
            raw: "{{baseUrl}}/api/books",
            host: ["{{baseUrl}}"],
            path: ["api", "books"],
          },
        },
      },
      {
        name: "Create Book",
        request: {
          method: "POST",
          header: [
            {
              key: "Content-Type",
              value: "application/json",
            },
          ],
          body: {
            mode: "raw",
            raw: JSON.stringify(
              {
                title: "1984",
                author: "–î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª",
                year: 1949,
                genre: "–ê–Ω—Ç–∏—É—Ç–æ–ø–∏—è",
                pages: 328,
                rating: 5,
                status: "unread",
                notes: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∞–Ω—Ç–∏—É—Ç–æ–ø–∏—è –æ —Ç–æ—Ç–∞–ª–∏—Ç–∞—Ä–Ω–æ–º –æ–±—â–µ—Å—Ç–≤–µ",
              },
              null,
              2,
            ),
          },
          url: {
            raw: "{{baseUrl}}/api/books",
            host: ["{{baseUrl}}"],
            path: ["api", "books"],
          },
        },
      },
    ],
    variable: [
      {
        key: "baseUrl",
        value: "http://localhost:3000",
      },
    ],
  }

  const downloadCollection = () => {
    const dataStr = JSON.stringify(postmanCollection, null, 2)
    const dataUri = "data:application/json;charset=utf-8," + encodeURIComponent(dataStr)

    const exportFileDefaultName = "Book-Library-API-Collection.postman_collection.json"

    const linkElement = document.createElement("a")
    linkElement.setAttribute("href", dataUri)
    linkElement.setAttribute("download", exportFileDefaultName)
    linkElement.click()
  }

  return (
    <div className="min-h-screen bg-background">
      <div className="container mx-auto px-4 py-8 max-w-6xl">
        <div className="mb-6">
          <Link href="/">
            <Button variant="outline" className="gap-2 mb-4 bg-transparent">
              <ArrowLeft className="w-4 h-4" />
              –ù–∞–∑–∞–¥ –∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
            </Button>
          </Link>
        </div>

        <div className="space-y-8">
          <div className="text-center">
            <h1 className="text-4xl font-bold mb-2">–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é API</h1>
            <p className="text-muted-foreground">
              –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é API –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ö–Ω–∏–≥ —Å –ø–æ–º–æ—â—å—é Postman –∏ –¥—Ä—É–≥–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
            </p>
          </div>

          <Tabs defaultValue="interactive" className="w-full">
            <TabsList className="grid w-full grid-cols-3">
              <TabsTrigger value="interactive">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</TabsTrigger>
              <TabsTrigger value="documentation">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API</TabsTrigger>
              <TabsTrigger value="postman">Postman & –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</TabsTrigger>
            </TabsList>

            <TabsContent value="interactive" className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle>üß™ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API</CardTitle>
                  <CardDescription>
                    –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ API –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∫–Ω–∏–≥ –ø—Ä—è–º–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-6">
                  {/* Quick Examples */}
                  <div>
                    <Label className="text-base font-semibold">–ë—ã—Å—Ç—Ä—ã–µ –ø—Ä–∏–º–µ—Ä—ã:</Label>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-2 mt-2">
                      {examples.map((example, index) => (
                        <Button
                          key={index}
                          variant="outline"
                          size="sm"
                          onClick={() => loadExample(example)}
                          className="text-left justify-start"
                        >
                          {example.name}
                        </Button>
                      ))}
                    </div>
                  </div>

                  <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    {/* Request Configuration */}
                    <div className="space-y-4">
                      <h3 className="text-lg font-semibold">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–ø—Ä–æ—Å–∞</h3>

                      {/* Method and Endpoint */}
                      <div className="flex gap-2">
                        <div className="w-32">
                          <Label htmlFor="method">–ú–µ—Ç–æ–¥</Label>
                          <Select value={method} onValueChange={setMethod}>
                            <SelectTrigger>
                              <SelectValue />
                            </SelectTrigger>
                            <SelectContent>
                              <SelectItem value="GET">GET</SelectItem>
                              <SelectItem value="POST">POST</SelectItem>
                              <SelectItem value="PUT">PUT</SelectItem>
                              <SelectItem value="DELETE">DELETE</SelectItem>
                            </SelectContent>
                          </Select>
                        </div>
                        <div className="flex-1">
                          <Label htmlFor="endpoint">Endpoint</Label>
                          <Input
                            id="endpoint"
                            value={endpoint}
                            onChange={(e) => setEndpoint(e.target.value)}
                            placeholder="/api/books"
                          />
                        </div>
                      </div>

                      {/* Headers */}
                      <div>
                        <Label htmlFor="headers">–ó–∞–≥–æ–ª–æ–≤–∫–∏ (JSON)</Label>
                        <Textarea
                          id="headers"
                          value={headers}
                          onChange={(e) => setHeaders(e.target.value)}
                          placeholder='{"Content-Type": "application/json"}'
                          rows={4}
                        />
                      </div>

                      {/* Body */}
                      {method !== "GET" && method !== "DELETE" && (
                        <div>
                          <Label htmlFor="body">–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (JSON)</Label>
                          <Textarea
                            id="body"
                            value={body}
                            onChange={(e) => setBody(e.target.value)}
                            placeholder='{"title": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏", "author": "–ê–≤—Ç–æ—Ä"}'
                            rows={8}
                          />
                        </div>
                      )}

                      {/* Send Button */}
                      <Button onClick={handleTest} disabled={loading} className="w-full gap-2">
                        <Send className="w-4 h-4" />
                        {loading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å"}
                      </Button>
                    </div>

                    {/* Response */}
                    <div className="space-y-4">
                      <div className="flex items-center justify-between">
                        <h3 className="text-lg font-semibold">–û—Ç–≤–µ—Ç</h3>
                        {response && (
                          <Button variant="outline" size="sm" onClick={copyResponse} className="gap-2 bg-transparent">
                            {copied ? <Check className="w-4 h-4" /> : <Copy className="w-4 h-4" />}
                            {copied ? "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ" : "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å"}
                          </Button>
                        )}
                      </div>

                      <div className="border rounded-lg">
                        <Textarea
                          value={response || "–û—Ç–≤–µ—Ç –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞..."}
                          readOnly
                          rows={20}
                          className="font-mono text-sm resize-none border-0"
                        />
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="documentation" className="space-y-6">
              {/* Quick Start */}
              <Card>
                <CardHeader>
                  <CardTitle>üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç</CardTitle>
                  <CardDescription>–ù–∞—á–Ω–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç</CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <h4 className="font-semibold mb-2">1. –°–∫–∞—á–∞–π—Ç–µ Postman –∫–æ–ª–ª–µ–∫—Ü–∏—é</h4>
                      <Button onClick={downloadCollection} className="gap-2">
                        <Download className="w-4 h-4" />
                        –°–∫–∞—á–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é
                      </Button>
                    </div>
                    <div>
                      <h4 className="font-semibold mb-2">2. –û—Ç–∫—Ä–æ–π—Ç–µ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é</h4>
                      <Link href="/api-docs">
                        <Button variant="outline" className="gap-2 bg-transparent">
                          <ExternalLink className="w-4 h-4" />
                          Swagger UI
                        </Button>
                      </Link>
                    </div>
                  </div>

                  <div className="bg-muted p-4 rounded-lg">
                    <h4 className="font-semibold mb-2">–ë–∞–∑–æ–≤—ã–π URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h4>
                    <code className="text-sm">http://localhost:3000/api</code>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>üìö API Endpoints</CardTitle>
                  <CardDescription>–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö endpoints –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π –∫–Ω–∏–≥</CardDescription>
                </CardHeader>
                <CardContent className="space-y-6">
                  {/* GET All Books */}
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center gap-2 mb-3">
                      <Badge variant="secondary">GET</Badge>
                      <code className="text-sm">/api/books</code>
                    </div>
                    <p className="text-sm text-muted-foreground mb-3">–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏</p>

                    <div className="space-y-2">
                      <h5 className="font-medium">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:</h5>
                      <ul className="text-sm space-y-1 text-muted-foreground ml-4">
                        <li>
                          ‚Ä¢ <code>status</code> (string, optional) - —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É —á—Ç–µ–Ω–∏—è (read, unread, reading)
                        </li>
                        <li>
                          ‚Ä¢ <code>genre</code> (string, optional) - —Ñ–∏–ª—å—Ç—Ä –ø–æ –∂–∞–Ω—Ä—É
                        </li>
                        <li>
                          ‚Ä¢ <code>search</code> (string, optional) - –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞–≤—Ç–æ—Ä—É
                        </li>
                      </ul>

                      <h5 className="font-medium">–ü—Ä–∏–º–µ—Ä—ã:</h5>
                      <div className="bg-muted p-2 rounded text-sm font-mono">
                        <div>GET /api/books</div>
                        <div>GET /api/books?status=read</div>
                        <div>GET /api/books?genre=–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞</div>
                        <div>GET /api/books?search=–û—Ä—É—ç–ª–ª</div>
                      </div>
                    </div>
                  </div>

                  {/* POST Create Book */}
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center gap-2 mb-3">
                      <Badge variant="default">POST</Badge>
                      <code className="text-sm">/api/books</code>
                    </div>
                    <p className="text-sm text-muted-foreground mb-3">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–Ω–∏–≥—É –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É</p>

                    <div className="space-y-2">
                      <h5 className="font-medium">–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (JSON):</h5>
                      <div className="bg-muted p-2 rounded text-sm font-mono">
                        <pre>{`{
  "title": "–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
  "author": "–ú–∏—Ö–∞–∏–ª –ë—É–ª–≥–∞–∫–æ–≤",
  "year": 1967,
  "genre": "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞",
  "pages": 480,
  "rating": 5,
  "status": "unread",
  "notes": "–ö–ª–∞—Å—Å–∏–∫–∞ —Ä—É—Å—Å–∫–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∏—Å—Ç–∏–∫–∏"
}`}</pre>
                      </div>

                      <h5 className="font-medium">–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:</h5>
                      <ul className="text-sm space-y-1 text-muted-foreground ml-4">
                        <li>
                          ‚Ä¢ <code>title</code> (string, 1-200 —Å–∏–º–≤–æ–ª–æ–≤) - –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏
                        </li>
                        <li>
                          ‚Ä¢ <code>author</code> (string, 1-100 —Å–∏–º–≤–æ–ª–æ–≤) - –∞–≤—Ç–æ—Ä –∫–Ω–∏–≥–∏
                        </li>
                      </ul>

                      <h5 className="font-medium">–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è:</h5>
                      <ul className="text-sm space-y-1 text-muted-foreground ml-4">
                        <li>
                          ‚Ä¢ <code>year</code> (number) - –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è
                        </li>
                        <li>
                          ‚Ä¢ <code>genre</code> (string) - –∂–∞–Ω—Ä –∫–Ω–∏–≥–∏
                        </li>
                        <li>
                          ‚Ä¢ <code>pages</code> (number) - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
                        </li>
                        <li>
                          ‚Ä¢ <code>rating</code> (number, 1-5) - —Ä–µ–π—Ç–∏–Ω–≥ –∫–Ω–∏–≥–∏
                        </li>
                        <li>
                          ‚Ä¢ <code>status</code> (string) - —Å—Ç–∞—Ç—É—Å —á—Ç–µ–Ω–∏—è: "unread", "reading", "read"
                        </li>
                        <li>
                          ‚Ä¢ <code>notes</code> (string) - –∑–∞–º–µ—Ç–∫–∏ –æ –∫–Ω–∏–≥–µ
                        </li>
                      </ul>
                    </div>
                  </div>

                  {/* GET Single Book */}
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center gap-2 mb-3">
                      <Badge variant="secondary">GET</Badge>
                      <code className="text-sm">/api/books/[id]</code>
                    </div>
                    <p className="text-sm text-muted-foreground mb-3">–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–Ω–∏–≥–µ –ø–æ ID</p>

                    <div className="space-y-2">
                      <h5 className="font-medium">–ü—Ä–∏–º–µ—Ä:</h5>
                      <div className="bg-muted p-2 rounded text-sm font-mono">GET /api/books/1</div>
                    </div>
                  </div>

                  {/* PUT Update Book */}
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center gap-2 mb-3">
                      <Badge variant="outline">PUT</Badge>
                      <code className="text-sm">/api/books/[id]</code>
                    </div>
                    <p className="text-sm text-muted-foreground mb-3">–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–Ω–∏–≥–µ</p>

                    <div className="space-y-2">
                      <h5 className="font-medium">–ü—Ä–∏–º–µ—Ä—ã —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞:</h5>
                      <div className="bg-muted p-2 rounded text-sm font-mono">
                        <pre>{`// –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å —á—Ç–µ–Ω–∏—è
{
  "status": "read"
}

// –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥
{
  "rating": 4
}

// –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∏ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫–∏
{
  "status": "read",
  "rating": 5,
  "notes": "–û—Ç–ª–∏—á–Ω–∞—è –∫–Ω–∏–≥–∞, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!"
}

// –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
{
  "title": "1984 (–Ω–æ–≤–æ–µ –∏–∑–¥–∞–Ω–∏–µ)",
  "author": "–î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª",
  "year": 2023,
  "genre": "–ê–Ω—Ç–∏—É—Ç–æ–ø–∏—è",
  "pages": 350,
  "rating": 5,
  "status": "read",
  "notes": "–ü–µ—Ä–µ–∏–∑–¥–∞–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏"
}`}</pre>
                      </div>
                    </div>
                  </div>

                  {/* DELETE Book */}
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center gap-2 mb-3">
                      <Badge variant="destructive">DELETE</Badge>
                      <code className="text-sm">/api/books/[id]</code>
                    </div>
                    <p className="text-sm text-muted-foreground mb-3">–£–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –ø–æ ID</p>

                    <div className="space-y-2">
                      <h5 className="font-medium">–ü—Ä–∏–º–µ—Ä:</h5>
                      <div className="bg-muted p-2 rounded text-sm font-mono">DELETE /api/books/1</div>
                    </div>
                  </div>

                  {/* GET Stats */}
                  <div className="border rounded-lg p-4">
                    <div className="flex items-center gap-2 mb-3">
                      <Badge variant="secondary">GET</Badge>
                      <code className="text-sm">/api/books/stats</code>
                    </div>
                    <p className="text-sm text-muted-foreground mb-3">–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏</p>

                    <div className="space-y-2">
                      <h5 className="font-medium">–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:</h5>
                      <div className="bg-muted p-2 rounded text-sm font-mono">
                        <pre>{`{
  "success": true,
  "data": {
    "totalBooks": 15,
    "readBooks": 8,
    "toReadBooks": 5,
    "readingBooks": 2,
    "genres": 6,
    "averageRating": 4.2,
    "totalPages": 4580
  }
}`}</pre>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫</CardTitle>
                  <CardDescription>–¢–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ –∏ –∫–æ–¥—ã –æ—Ç–≤–µ—Ç–æ–≤ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="border rounded-lg p-3">
                        <div className="flex items-center gap-2 mb-2">
                          <Badge variant="destructive">400</Badge>
                          <span className="font-medium">Bad Request</span>
                        </div>
                        <ul className="text-sm text-muted-foreground space-y-1">
                          <li>‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ title –∏–ª–∏ author</li>
                          <li>‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç JSON</li>
                          <li>‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, rating –Ω–µ —á–∏—Å–ª–æ)</li>
                          <li>‚Ä¢ –†–µ–π—Ç–∏–Ω–≥ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ 1-5</li>
                          <li>‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å —á—Ç–µ–Ω–∏—è</li>
                        </ul>
                      </div>

                      <div className="border rounded-lg p-3">
                        <div className="flex items-center gap-2 mb-2">
                          <Badge variant="destructive">404</Badge>
                          <span className="font-medium">Not Found</span>
                        </div>
                        <ul className="text-sm text-muted-foreground space-y-1">
                          <li>‚Ä¢ –ö–Ω–∏–≥–∞ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</li>
                          <li>‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π endpoint</li>
                        </ul>
                      </div>

                      <div className="border rounded-lg p-3">
                        <div className="flex items-center gap-2 mb-2">
                          <Badge variant="destructive">500</Badge>
                          <span className="font-medium">Internal Server Error</span>
                        </div>
                        <ul className="text-sm text-muted-foreground space-y-1">
                          <li>‚Ä¢ –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</li>
                          <li>‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º –¥–∞–Ω–Ω—ã—Ö</li>
                        </ul>
                      </div>

                      <div className="border rounded-lg p-3">
                        <div className="flex items-center gap-2 mb-2">
                          <Badge variant="default">200/201</Badge>
                          <span className="font-medium">Success</span>
                        </div>
                        <ul className="text-sm text-muted-foreground space-y-1">
                          <li>‚Ä¢ 200 - —É—Å–ø–µ—à–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏</li>
                          <li>‚Ä¢ 201 - —É—Å–ø–µ—à–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–Ω–∏–≥–∏</li>
                        </ul>
                      </div>
                    </div>

                    <div>
                      <h4 className="font-semibold mb-2">–§–æ—Ä–º–∞—Ç –æ—à–∏–±–æ–∫:</h4>
                      <div className="bg-muted p-3 rounded text-sm font-mono">
                        <pre>{`{
  "success": false,
  "error": "–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏"
}`}</pre>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="postman" className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle>üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Postman</CardTitle>
                  <CardDescription>
                    –ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é Postman –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∫–Ω–∏–≥
                  </CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="space-y-4">
                    <div>
                      <h4 className="font-semibold mb-2">–®–∞–≥ 1: –ò–º–ø–æ—Ä—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏</h4>
                      <ol className="text-sm space-y-1 text-muted-foreground ml-4">
                        <li>1. –°–∫–∞—á–∞–π—Ç–µ –∫–æ–ª–ª–µ–∫—Ü–∏—é –≤—ã—à–µ</li>
                        <li>2. –û—Ç–∫—Ä–æ–π—Ç–µ Postman</li>
                        <li>3. –ù–∞–∂–º–∏—Ç–µ "Import" ‚Üí "Upload Files"</li>
                        <li>4. –í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª</li>
                      </ol>
                    </div>

                    <div>
                      <h4 className="font-semibold mb-2">–®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö</h4>
                      <div className="bg-muted p-3 rounded text-sm">
                        <div className="font-medium mb-1">–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è:</div>
                        <div>
                          <code>baseUrl</code> = <code>http://localhost:3000</code>
                        </div>
                      </div>
                    </div>

                    <div>
                      <h4 className="font-semibold mb-2">–®–∞–≥ 3: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏</h4>
                      <ol className="text-sm space-y-1 text-muted-foreground ml-4">
                        <li>
                          1. <strong>GET /api/books</strong> - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
                        </li>
                        <li>
                          2. <strong>POST /api/books</strong> - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∫–Ω–∏–≥—É
                        </li>
                        <li>
                          3. <strong>GET /api/books/[id]</strong> - –ø–æ–ª—É—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—É—é –∫–Ω–∏–≥—É
                        </li>
                        <li>
                          4. <strong>PUT /api/books/[id]</strong> - –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ "reading"
                        </li>
                        <li>
                          5. <strong>PUT /api/books/[id]</strong> - –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ "read" –∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥
                        </li>
                        <li>
                          6. <strong>GET /api/books/stats</strong> - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                        </li>
                        <li>
                          7. <strong>GET /api/books?status=read</strong> - —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥
                        </li>
                        <li>
                          8. <strong>DELETE /api/books/[id]</strong> - —É–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                        </li>
                      </ol>
                    </div>

                    <div>
                      <h4 className="font-semibold mb-2">–®–∞–≥ 4: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏</h4>
                      <p className="text-sm text-muted-foreground mb-2">–î–æ–±–∞–≤—å—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "Tests" –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:</p>
                      <div className="bg-muted p-3 rounded text-sm font-mono">
                        <pre>{`// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
pm.test("Response has success field", function () {
    const jsonData = pm.response.json();
    pm.expect(jsonData).to.have.property('success');
    pm.expect(jsonData.success).to.be.true;
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥–∏
pm.test("Book has required fields", function () {
    const jsonData = pm.response.json();
    if (jsonData.data && !Array.isArray(jsonData.data)) {
        pm.expect(jsonData.data).to.have.property('title');
        pm.expect(jsonData.data).to.have.property('author');
        pm.expect(jsonData.data).to.have.property('status');
    }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
pm.test("Rating is valid", function () {
    const jsonData = pm.response.json();
    if (jsonData.data && jsonData.data.rating) {
        pm.expect(jsonData.data.rating).to.be.within(1, 5);
    }
});`}</pre>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>üõ†Ô∏è –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</CardTitle>
                  <CardDescription>–î—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∫–Ω–∏–≥</CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <h4 className="font-semibold mb-2">cURL</h4>
                      <div className="bg-muted p-3 rounded text-sm font-mono">
                        <pre>{`# –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏
curl -X GET http://localhost:3000/api/books

# –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É
curl -X POST http://localhost:3000/api/books \\
  -H "Content-Type: application/json" \\
  -d '{
    "title":"–í–æ–π–Ω–∞ –∏ –º–∏—Ä",
    "author":"–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π",
    "year":1869,
    "genre":"–†–æ–º–∞–Ω",
    "pages":1300,
    "status":"unread"
  }'

# –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–Ω–∏–≥–∏
curl -X PUT http://localhost:3000/api/books/1 \\
  -H "Content-Type: application/json" \\
  -d '{"status":"read","rating":5}'`}</pre>
                      </div>
                    </div>

                    <div>
                      <h4 className="font-semibold mb-2">JavaScript Fetch</h4>
                      <div className="bg-muted p-3 rounded text-sm font-mono">
                        <pre>{`// –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É
fetch('/api/books', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({
    title: '–ß–∏—Å—Ç—ã–π –∫–æ–¥',
    author: '–†–æ–±–µ—Ä—Ç –ú–∞—Ä—Ç–∏–Ω',
    year: 2008,
    genre: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
    pages: 464,
    status: 'reading'
  })
})

// –û–±–Ω–æ–≤–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥
fetch('/api/books/1', {
  method: 'PUT',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({
    rating: 5,
    status: 'read'
  })
})`}</pre>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </div>
      </div>
    </div>
  )
}
